{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      username: '',\n      password: '',\n      errors: []\n    };\n  },\n  mounted() {\n    document.title = 'Log In | Djakets ';\n  },\n  methods: {\n    async submitForm() {\n      axios.defaults.headers.common['Authorization'] = \"\";\n      localStorage.removeItem(\"token\");\n      const formData = {\n        username: this.username,\n        password: this.password\n      };\n      axios.post('/api/v1/token/login', formData).then(response => {\n        const token = response.data.auth_token;\n        this.$store.commit('setToken', token);\n        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n        localStorage.setItem(\"token\", token);\n      }).catch(error => {\n        if (error.response) {\n          for (const property in error.response.data) {\n            this.error.push(`${property}: ${error.response.data[property]}`);\n          }\n          console.log(JSON.stringify(error.response.data));\n        } else if (error.message) {\n          this.error.push('Something went wrong. Please try again!');\n          console.log(JSON.stringify(error));\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","username","password","errors","mounted","document","title","methods","submitForm","defaults","headers","common","localStorage","removeItem","formData","post","then","response","token","auth_token","$store","commit","setItem","catch","error","property","push","console","log","JSON","stringify","message"],"sources":["C:\\Users\\utilisateur\\Desktop\\Web Development\\Python\\django_vuejs\\vue_djakets\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-log-in\">\r\n    <div class=\"columns\">\r\n      <div class=\"column is-4 is-offset-4\">\r\n        <h1 class=\"title\">Log In</h1>\r\n        <form @submit.prevent=\"submitForm\">\r\n          <div class=\"field\">\r\n            <label>Username</label>\r\n            <div class=\"control\">\r\n              <input type=\"text\" class=\"input\" v-model=\"username\">\r\n            </div>\r\n          </div>\r\n          <div class=\"field\">\r\n            <label>Password</label>\r\n            <div class=\"control\">\r\n              <input type=\"password\" class=\"input\" v-model=\"password\">\r\n            </div>\r\n          </div>\r\n          <div class=\"notification is-danger\" v-if=\"errors.length\">\r\n            <p v-for=\"error in errors\" v-bind:key=\"error\">{{error}}</p>\r\n          </div>\r\n          <div class=\"field\">\r\n            <div class=\"control\">\r\n              <button class=\"button is-dark\">Sign Up</button>\r\n            </div>\r\n          </div>\r\n          <hr>\r\n          Or <router-link to=\"/signup\">Click Here</router-link> to sign up\r\n        </form>\r\n      </div>\r\n    </div>    \r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  name: \"Login\",\r\n  data(){\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      errors: []\r\n    }\r\n  },\r\n  mounted(){\r\n    document.title = 'Log In | Djakets '\r\n  },\r\n  methods:{\r\n    async submitForm(){\r\n      axios.defaults.headers.common['Authorization'] = \"\"\r\n      localStorage.removeItem(\"token\")\r\n      const formData = {\r\n        username: this.username,\r\n        password: this.password\r\n      }\r\n      axios\r\n          .post('/api/v1/token/login', formData)\r\n          .then(response => {\r\n            const token = response.data.auth_token\r\n            this.$store.commit('setToken', token)\r\n            axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token\r\n            localStorage.setItem(\"token\", token)\r\n          })\r\n          .catch(error => {\r\n            if(error.response){\r\n              for (const property in error.response.data){\r\n                this.error.push(`${property}: ${error.response.data[property]}`)\r\n              }\r\n              console.log(JSON.stringify(error.response.data))\r\n            }else if (error.message){\r\n              this.error.push('Something went wrong. Please try again!')\r\n              console.log(JSON.stringify(error))\r\n            }\r\n          })\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";AAkCA,OAAOA,KAAI,MAAO,OAAM;AACxB,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,OAAOA,CAAA,EAAE;IACPC,QAAQ,CAACC,KAAI,GAAI,mBAAkB;EACrC,CAAC;EACDC,OAAO,EAAC;IACN,MAAMC,UAAUA,CAAA,EAAE;MAChBV,KAAK,CAACW,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,EAAC;MAClDC,YAAY,CAACC,UAAU,CAAC,OAAO;MAC/B,MAAMC,QAAO,GAAI;QACfb,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,QAAQ,EAAE,IAAI,CAACA;MACjB;MACAJ,KAAI,CACCiB,IAAI,CAAC,qBAAqB,EAAED,QAAQ,EACpCE,IAAI,CAACC,QAAO,IAAK;QAChB,MAAMC,KAAI,GAAID,QAAQ,CAACjB,IAAI,CAACmB,UAAS;QACrC,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,UAAU,EAAEH,KAAK;QACpCpB,KAAK,CAACW,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,QAAO,GAAIO,KAAI;QAChEN,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEJ,KAAK;MACrC,CAAC,EACAK,KAAK,CAACC,KAAI,IAAK;QACd,IAAGA,KAAK,CAACP,QAAQ,EAAC;UAChB,KAAK,MAAMQ,QAAO,IAAKD,KAAK,CAACP,QAAQ,CAACjB,IAAI,EAAC;YACzC,IAAI,CAACwB,KAAK,CAACE,IAAI,CAAC,GAAGD,QAAQ,KAAKD,KAAK,CAACP,QAAQ,CAACjB,IAAI,CAACyB,QAAQ,CAAC,EAAE;UACjE;UACAE,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACN,KAAK,CAACP,QAAQ,CAACjB,IAAI,CAAC;QACjD,CAAC,MAAK,IAAIwB,KAAK,CAACO,OAAO,EAAC;UACtB,IAAI,CAACP,KAAK,CAACE,IAAI,CAAC,yCAAyC;UACzDC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC;QACnC;MACF,CAAC;IACP;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}