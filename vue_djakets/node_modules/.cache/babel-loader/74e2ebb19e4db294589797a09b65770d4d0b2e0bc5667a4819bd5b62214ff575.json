{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport store from \"@/store\";\nimport HomeView from \"../views/HomeView.vue\";\nimport Product from \"../views/Product.vue\";\nimport Category from \"../views/Category.vue\";\nimport Search from \"../views/Search.vue\";\nimport Cart from \"../views/Cart.vue\";\nimport SignUp from \"../views/SignUp.vue\";\nimport Login from \"../views/Login.vue\";\nimport MyAccount from \"../views/MyAccount.vue\";\nimport Checkout from \"../views/Checkout.vue\";\nconst routes = [{\n  path: \"/\",\n  name: \"home\",\n  component: HomeView\n}, {\n  path: \"/about\",\n  name: \"about\",\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */\"../views/AboutView.vue\")\n}, {\n  path: \"/:category_slug/:product_slug/\",\n  name: \"product\",\n  component: Product\n}, {\n  path: \"/search/\",\n  name: \"Search\",\n  component: Search\n}, {\n  path: \"/:category_slug/\",\n  name: \"Category\",\n  component: Category\n}, {\n  path: \"/cart\",\n  name: \"Cart\",\n  component: Cart\n}, {\n  path: \"/signup\",\n  name: \"SignUp\",\n  component: SignUp\n}, {\n  path: \"/log-in\",\n  name: \"Login\",\n  component: Login\n}, {\n  path: \"/my-account\",\n  name: \"MyAccount\",\n  component: MyAccount,\n  meta: {\n    requireLogin: true\n  }\n}, {\n  path: \"/checkout\",\n  name: \"Checkout\",\n  component: Che\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requireLogin) && !store.state.isAuthentificated) {\n    next({\n      name: \"Login\",\n      query: {\n        to: to.path\n      }\n    });\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","HomeView","Product","Category","Search","Cart","SignUp","Login","MyAccount","Checkout","routes","path","name","component","meta","requireLogin","Che","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","state","isAuthentificated","query"],"sources":["C:/Users/utilisateur/Desktop/Web Development/Python/django_vuejs/vue_djakets/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\n\nimport store from \"@/store\";\n\nimport HomeView from \"../views/HomeView.vue\";\nimport Product from \"../views/Product.vue\";\nimport Category from \"../views/Category.vue\";\nimport Search from \"../views/Search.vue\";\nimport Cart from \"../views/Cart.vue\";\nimport SignUp from \"../views/SignUp.vue\";\nimport Login from \"../views/Login.vue\";\nimport MyAccount from \"../views/MyAccount.vue\";\nimport Checkout from \"../views/Checkout.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"home\",\n    component: HomeView,\n  },\n  {\n    path: \"/about\",\n    name: \"about\",\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () =>\n      import(/* webpackChunkName: \"about\" */ \"../views/AboutView.vue\"),\n  },\n  {\n    path: \"/:category_slug/:product_slug/\",\n    name: \"product\",\n    component: Product,\n  },\n  {\n    path: \"/search/\",\n    name: \"Search\",\n    component: Search,\n  },\n  {\n    path: \"/:category_slug/\",\n    name: \"Category\",\n    component: Category,\n  },\n  {\n    path: \"/cart\",\n    name: \"Cart\",\n    component: Cart,\n  },\n  {\n    path: \"/signup\",\n    name: \"SignUp\",\n    component: SignUp,\n  },\n  {\n    path: \"/log-in\",\n    name: \"Login\",\n    component: Login,\n  },\n  {\n    path: \"/my-account\",\n    name: \"MyAccount\",\n    component: MyAccount,\n    meta: {\n      requireLogin: true,\n    },\n  },\n  {\n    path: \"/checkout\",\n    name: \"Checkout\",\n    component: Che,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  if (\n    to.matched.some((record) => record.meta.requireLogin) &&\n    !store.state.isAuthentificated\n  ) {\n    next({ name: \"Login\", query: { to: to.path } });\n  } else {\n    next();\n  }\n})\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAE3D,OAAOC,KAAK,MAAM,SAAS;AAE3B,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEZ;AACb,CAAC,EACD;EACEU,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACb;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KACT,MAAM,EAAC,+BAAgC,wBAAwB;AACnE,CAAC,EACD;EACEF,IAAI,EAAE,gCAAgC;EACtCC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEX;AACb,CAAC,EACD;EACES,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAET;AACb,CAAC,EACD;EACEO,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEV;AACb,CAAC,EACD;EACEQ,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEL,SAAS;EACpBM,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEG;AACb,CAAC,CACF;AAED,MAAMC,MAAM,GAAGnB,YAAY,CAAC;EAC1BoB,OAAO,EAAEnB,gBAAgB,CAACoB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CX;AACF,CAAC,CAAC;AAEFO,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IACEF,EAAE,CAACG,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACd,IAAI,CAACC,YAAY,CAAC,IACrD,CAACf,KAAK,CAAC6B,KAAK,CAACC,iBAAiB,EAC9B;IACAL,IAAI,CAAC;MAAEb,IAAI,EAAE,OAAO;MAAEmB,KAAK,EAAE;QAAER,EAAE,EAAEA,EAAE,CAACZ;MAAK;IAAE,CAAC,CAAC;EACjD,CAAC,MAAM;IACLc,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}